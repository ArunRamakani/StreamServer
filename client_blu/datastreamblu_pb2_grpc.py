# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import datastreamblu_pb2 as datastreamblu__pb2


class GRPCDataStreamBLUStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ServerStreaming = channel.stream_unary(
        '/datastreamblu.GRPCDataStreamBLU/ServerStreaming',
        request_serializer=datastreamblu__pb2.Request.SerializeToString,
        response_deserializer=datastreamblu__pb2.Response.FromString,
        )


class GRPCDataStreamBLUServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def ServerStreaming(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_GRPCDataStreamBLUServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ServerStreaming': grpc.stream_unary_rpc_method_handler(
          servicer.ServerStreaming,
          request_deserializer=datastreamblu__pb2.Request.FromString,
          response_serializer=datastreamblu__pb2.Response.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'datastreamblu.GRPCDataStreamBLU', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
